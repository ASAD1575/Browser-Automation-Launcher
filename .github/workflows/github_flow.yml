name: GitHub Flow Deployment

on:
  push:
    branches:
      - main
      - staging
    tags:
      - 'v*'
  pull_request:
    branches:
      - main
      - staging

jobs:
  deploy-staging:
    if: >-
      (github.event_name == 'push' && github.ref == 'refs/heads/staging') ||
      (github.event_name == 'pull_request' && github.base_ref == 'staging' && github.event.pull_request.merged == true)
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: arn:aws:iam::317822790556:role/pipelines-cd-github
          aws-region: us-east-1

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.9.8

      - name: Deploy to Staging
        # env:
        #     TF_VAR_SECRET_DATA: ${{ secrets.SECRET_DATA_STAGING }}
        run: |
          chmod +x ./*.sh
          ENVIRONMENT=staging ./deploy.sh

  deploy-production:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: arn:aws:iam::317822790556:role/pipelines-cd-github
          aws-region: us-east-1

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.9.8

      - name: Deploy to Production
        # env:
        #   TF_VAR_SECRET_DATA: ${{ secrets.SECRET_DATA_PROD }}
        run: |
          chmod +x ./*.sh
          ENVIRONMENT=prod ./deploy.sh